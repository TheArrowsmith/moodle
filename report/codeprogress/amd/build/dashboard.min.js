define ("report_codeprogress/dashboard",["jquery","core/ajax","core/notification"],function(a,b,c){"use strict";return{charts:{},init:function init(b,c){if(this.courseid=b,this.destroyCharts(),c)try{var d="string"==typeof c?JSON.parse(c):c;this.processData(d),this.renderTable(),this.renderCharts(),this.renderSummaryStats(),a("#loading-message").hide(),a("#progress-content").show()}catch(a){console.error("Error processing preloaded data:",a),this.loadProgressData()}else this.loadProgressData()},destroyCharts:function destroyCharts(){this.charts.averageScores&&(this.charts.averageScores.destroy(),this.charts.averageScores=null),this.charts.submissionStatus&&(this.charts.submissionStatus.destroy(),this.charts.submissionStatus=null)},loadProgressData:function loadProgressData(){var a=this,d=b.call([{methodname:"local_customapi_get_sandbox_grades",args:{courseid:this.courseid}}]);d[0].done(function(b){a.processData(b),a.renderTable(),a.renderCharts(),a.renderSummaryStats(),a("#loading-message").hide(),a("#progress-content").show()}).fail(function(b){c.exception(b),a("#loading-message").hide(),a("#error-message").show(),a("#error-text").text(b.message||"Failed to load data")})},processData:function processData(a){this.students={},this.activities={},this.rawData=a,a.forEach(function(a){this.students[a.userid]||(this.students[a.userid]={id:a.userid,name:a.fullname,username:a.username,grades:{}}),this.activities[a.activityid]||(this.activities[a.activityid]={id:a.activityid,name:a.activityname,cmid:a.cmid}),this.students[a.userid].grades[a.activityid]={grade:a.grade,status:a.submissionstatus,timesubmitted:a.timesubmitted}},this)},renderTable:function renderTable(){var b=a("#table-header"),c=a("#table-body"),d=a("#table-footer");Object.values(this.activities).forEach(function(a){b.append("<th class=\"text-center\">"+this.escapeHtml(a.name)+"</th>")},this),Object.values(this.students).forEach(function(b){var d=a("<tr>");d.append("<td class=\"sticky-col\">"+this.escapeHtml(b.name)+"</td>"),Object.values(this.activities).forEach(function(c){var e=b.grades[c.id],f=a("<td class=\"text-center\">");if(e&&"submitted"===e.status){var g=null===e.grade?0:e.grade,h=this.getGradeClass(g);f.addClass(h),f.text(g+"%")}else f.addClass("text-muted"),f.html("<i class=\"fa fa-minus\"></i>");d.append(f)},this),c.append(d)},this);var e=a("<tr class=\"font-weight-bold\">");e.append("<td class=\"sticky-col\">Average</td>"),Object.values(this.activities).forEach(function(b){var c=[];Object.values(this.students).forEach(function(a){var d=a.grades[b.id];d&&"submitted"===d.status&&null!==d.grade&&c.push(parseFloat(d.grade))});var d=c.length?(c.reduce(function(c,a){return c+a})/c.length).toFixed(1):"-",f=a("<td class=\"text-center\">");"-"===d?f.text(d):(f.addClass(this.getGradeClass(parseFloat(d))),f.text(d+"%")),e.append(f)},this),d.append(e)},renderCharts:function renderCharts(){this.renderAverageScoresChart(),this.renderSubmissionStatusChart()},renderAverageScoresChart:function renderAverageScoresChart(){var a=document.getElementById("average-scores-chart").getContext("2d"),b=[],c=[];Object.values(this.activities).forEach(function(a){b.push(a.name);var d=[];Object.values(this.students).forEach(function(b){var c=b.grades[a.id];c&&"submitted"===c.status&&null!==c.grade&&d.push(parseFloat(c.grade))});var e=d.length?d.reduce(function(c,a){return c+a})/d.length:0;c.push(e.toFixed(1))},this),"undefined"!=typeof Chart&&(this.charts.averageScores=new Chart(a,{type:"bar",data:{labels:b,datasets:[{label:"Average Score (%)",data:c,backgroundColor:"rgba(54, 162, 235, 0.5)",borderColor:"rgba(54, 162, 235, 1)",borderWidth:1}]},options:{responsive:!0,scales:{y:{beginAtZero:!0,max:100,ticks:{callback:function callback(a){return a+"%"}}}},plugins:{tooltip:{callbacks:{label:function label(a){return a.dataset.label+": "+a.parsed.y+"%"}}}}}}))},renderSubmissionStatusChart:function renderSubmissionStatusChart(){var a=document.getElementById("submission-status-chart").getContext("2d"),b=0,c=0;Object.values(this.students).forEach(function(a){Object.values(this.activities).forEach(function(d){var e=a.grades[d.id];e&&"submitted"===e.status?b++:c++},this)},this),"undefined"!=typeof Chart&&(this.charts.submissionStatus=new Chart(a,{type:"doughnut",data:{labels:["Submitted","Not Submitted"],datasets:[{data:[b,c],backgroundColor:["rgba(75, 192, 192, 0.6)","rgba(255, 99, 132, 0.6)"],borderColor:["rgba(75, 192, 192, 1)","rgba(255, 99, 132, 1)"],borderWidth:1}]},options:{responsive:!0,plugins:{legend:{position:"bottom"},tooltip:{callbacks:{label:function label(a){var b=a.dataset.data.reduce(function(c,a){return c+a}),c=(100*(a.parsed/b)).toFixed(1);return a.label+": "+a.parsed+" ("+c+"%")}}}}}})},renderSummaryStats:function renderSummaryStats(){a("#total-students").text(Object.keys(this.students).length),a("#total-assignments").text(Object.keys(this.activities).length);var b=[];Object.values(this.students).forEach(function(a){Object.values(this.activities).forEach(function(c){var d=a.grades[c.id];d&&"submitted"===d.status&&null!==d.grade&&b.push(parseFloat(d.grade))},this)},this);var c=b.length?(b.reduce(function(c,a){return c+a})/b.length).toFixed(1):0;a("#overall-average").text(c+"%");var d=Object.keys(this.students).length*Object.keys(this.activities).length,e=b.length,f=0<d?(100*(e/d)).toFixed(1):0;a("#completion-rate").text(f+"%")},getGradeClass:function getGradeClass(a){return 80<=a?"text-success":60<=a?"text-warning":"text-danger"},escapeHtml:function escapeHtml(a){var b={"&":"&amp;","<":"&lt;",">":"&gt;","\"":"&quot;","'":"&#039;"};return a.replace(/[&<>"']/g,function(a){return b[a]})}}})